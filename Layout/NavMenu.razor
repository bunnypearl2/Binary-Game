@inject IJSRuntime JSRuntime

<html>
    <head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">

    <style>
        .bebas-neue-regular {
            font-family: "Bebas Neue", sans-serif;
        }
    </style>
    </head>
<body>
    <nav class="nav-container">
        <ul class="nav-list" >
            <li class="nav-item dropdown">
                <!--<a href="#">☰ My Conversion Tutor ▼</a>-->
                <a class="bebas-neue-regular" style="font-size: clamp(12px, 5vw, 36px); font-weight:bold;" ref="#">☰ <span style="color:#E7731D"> MyConversionTutor.</span> </a>
               
                <ul class="dropdown-menu">
                    <li><a href="/">Home</a></li>
                    <li><a href="/BaseQuiz">Base Quiz!</a></li>
                    <li><a href="/BinaryTutorial">Binary Tutorial</a></li>
                    <li><a href="/CheatSheet">Cheat Sheet</a></li>
                    <li><a href="https://docs.google.com/forms/d/e/1FAIpQLSePMbz9bPIlSvajb0_66p7J9V5TsYOv3YgarbE47V_eSyDdjA/viewform?usp=dialog">Feedback</a></li>

                </ul>
            </li>
        </ul>
        <label class="toggle-container">
            <!--div class=""-->
            <input type="checkbox" value="@IsDarkMode" @onchange="ToggleTheme">
            <span class="slider"></span>
            <span class="toggle-label">@(IsDarkMode ? "Dark Mode" : "Light Mode")</span>
        </label>
    </nav>

</body>
</html>


<!-- <nav class="nav-container">
    <!<ul class="nav-list">
        <!<li class="nav-item dropdown">
            <!--<a href="#">☰ My Conversion Tutor ▼</a>
            <a style="font-size: 20px" ref="#">☰  <span style="color: orange"> MyConversionTutor.</span> </a>
            <ul class="dropdown-menu">
                <li><a href="/">Home</a></li>
                <li><a href="/learnyourbases">Learn Your Bases!</a></li>
                <li><a href="/binarytutorial">Binary Tutorial</a></li>
                <li><a href="/cheatsheet">Cheat Sheet</a></li>
                
            </ul>
        </li>
    </ul>
    <label class="toggle-container">
        Dark Mode
        <input type="checkbox" value="@IsDarkMode" @onchange="ToggleTheme">
        <span class="slider"></span>
        <span class="toggle-label">@(IsDarkMode? "Dark On": "Dark Off")</span>
    </label>
</nav>
>>>>>>> 9bfa1b11b31dd2c64e11b0b36d13b7fa1e5b4a60-->


@code {
    private bool IsDarkMode = false;
    
    @*Saves theme if reloaded, but the toggle doesn't adjust accordingly (i.e. goes back to off even if dark mode is on)
    protected override async Task OnInitializedAsync()
    {
        var storedValue = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "theme");

        if (string.IsNullOrEmpty(storedValue))
        {
            // Default to Light Mode
            IsDarkMode = false;
        }
        else
        {
            // Use saved theme from localStorage
            IsDarkMode = storedValue == "dark";
        }

        await ApplyTheme();
    }
    *@
    private async Task ToggleTheme(ChangeEventArgs e)
    {
        IsDarkMode = (bool)e.Value;
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "theme", IsDarkMode ? "dark" : "light");
        await ApplyTheme();
    }

    private async Task ApplyTheme()
    {
        var themeClass = IsDarkMode ? "dark-mode" : "";
        await JSRuntime.InvokeVoidAsync("applyTheme", themeClass);
    }
 }
