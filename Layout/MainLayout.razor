@inherits LayoutComponentBase
<div class="page">

    

    <main>
        <div>
            <NavMenu />
        </div>
        <article class="container">
            @Body
        </article>
    </main>
</div>

@* --- Calculator Side Tab --- *@
<div class="calculator-tab">
    <button @onclick="ToggleCalculator" class="tab-button">
        🧮 Calc
    </button>

    <div class="side-panel @(showCalculator ? "open" : "")">
        <h4>Mini Calculator</h4>
        <div>
            <input type="number" @bind="number1" placeholder="First number" step="any" />
            <select @bind="operation">
                <option value="^">^ </option>
                <option value="+">+</option>
                <option value="-">-</option>
                <option value="*">*</option>
                <option value="/">/</option>
            </select>
            <input type="number" @bind="number2" placeholder="Second number" step="any" />
            <button @onclick="Calculate">=</button>
        </div>
        <p><strong>Result:</strong> @result</p>
    </div>
</div>

<style>
    .calculator-tab {
        position: fixed;
        top: 100px;
        right: 0;
        z-index: 1000;
    }

    .tab-button {
        background-color: #3f51b5;
        color: white;
        border: none;
        padding: 10px;
        cursor: pointer;
        border-top-left-radius: 8px;
        border-bottom-left-radius: 8px;
    }

    .side-panel {
        position: fixed;
        top: 160px;
        right: -300px;
        width: 250px;
        background: white;
        box-shadow: -2px 0 10px rgba(0,0,0,0.2);
        padding: 15px;
        transition: right 0.3s ease;
        z-index: 1001;
    }

        .side-panel.open {
            right: 0;
        }

        .side-panel input,
        .side-panel select,
        .side-panel button {
            display: block;
            margin: 10px 0;
            width: 100%;
        }
</style>

@code {
    private double number1 = 2;
    private double number2;
    private string operation = "^";
    private string result;
    private bool showCalculator = false;

    private void ToggleCalculator()
    {
        showCalculator = !showCalculator;
    }

    private void Calculate()
    {
        try
        {
            result = operation switch
            {
                "+" => (number1 + number2).ToString(),
                "-" => (number1 - number2).ToString(),
                "*" => (number1 * number2).ToString(),
                "/" => number2 != 0 ? (number1 / number2).ToString() : "Error: Divide by 0",
                "^" => Math.Pow(number1, number2).ToString(),
                _ => "Invalid operation"
            };
        }
        catch
        {
            result = "Error";
        }
    }
}
